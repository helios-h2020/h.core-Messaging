import { TrackerInfo, AbstractNodeOptions } from './identifiers';
import { NetworkNode } from './logic/node/NetworkNode';
export interface NetworkNodeOptions extends AbstractNodeOptions {
    trackers: TrackerInfo[];
    disconnectionWaitTime?: number;
    peerPingInterval?: number;
    newWebrtcConnectionTimeout?: number;
    webrtcDatachannelBufferThresholdLow?: number;
    webrtcDatachannelBufferThresholdHigh?: number;
    stunUrls?: string[];
    rttUpdateTimeout?: number;
    trackerConnectionMaintenanceInterval?: number;
    webrtcDisallowPrivateAddresses?: boolean;
    acceptProxyConnections?: boolean;
}
export declare const createNetworkNode: ({ id, name, location, trackers, metricsContext, peerPingInterval, trackerPingInterval, disconnectionWaitTime, newWebrtcConnectionTimeout, rttUpdateTimeout, webrtcDatachannelBufferThresholdLow, webrtcDatachannelBufferThresholdHigh, stunUrls, trackerConnectionMaintenanceInterval, webrtcDisallowPrivateAddresses, acceptProxyConnections }: NetworkNodeOptions) => NetworkNode;
