/**
 * Encrypt StreamMessages in-place.
 */
import { StreamMessage } from 'streamr-client-protocol';
import { PublisherKeyExchange } from '../encryption/KeyExchangePublisher';
import { StreamEndpointsCached } from '../StreamEndpointsCached';
import Ethereum from '../Ethereum';
import { Stoppable } from '../utils/Stoppable';
export default class PublisherEncryption implements Stoppable {
    private streamEndpoints;
    private keyExchange;
    private ethereum;
    isStopped: boolean;
    constructor(streamEndpoints: StreamEndpointsCached, keyExchange: PublisherKeyExchange, ethereum: Ethereum);
    encrypt(streamMessage: StreamMessage): Promise<void>;
    start(): Promise<void>;
    stop(): Promise<void>;
}
