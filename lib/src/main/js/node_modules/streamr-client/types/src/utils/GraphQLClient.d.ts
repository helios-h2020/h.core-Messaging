import { StrictStreamrClientConfig } from '../Config';
import { Context } from './Context';
import { HttpFetcher } from './HttpFetcher';
export declare class GraphQLClient {
    private httpFetcher;
    private config;
    private debug;
    constructor(context: Context, httpFetcher: HttpFetcher, config: StrictStreamrClientConfig);
    sendQuery(gqlQuery: string): Promise<Object>;
    fetchPaginatedResults<T extends {
        id: string;
    }>(createQuery: (lastId: string, pageSize: number) => string, pageSize?: number): AsyncGenerator<T, void, undefined>;
    static createWhereClause(variables: Record<string, any>): string;
}
