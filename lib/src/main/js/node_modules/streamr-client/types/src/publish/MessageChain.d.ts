/**
 * MessageChains
 */
import { MessageRef, MessageID, StreamPartID } from 'streamr-client-protocol';
import { CacheConfig } from '../Config';
export declare type MessageChainOptions = {
    publisherId: string;
    msgChainId?: string;
};
export declare function getCachedMessageChain(cacheConfig: CacheConfig): ((args_0: StreamPartID, args_1: MessageChainOptions) => MessageChain) & {
    clear: () => void;
    clearMatching: (matchFn: (key: string) => boolean) => void;
};
/**
 * Manage sequenceNumber & msgChainId for StreamMessages
 */
export default class MessageChain {
    private readonly streamId;
    private readonly streamPartition;
    readonly publisherId: string;
    readonly msgChainId: string;
    prevMsgRef?: MessageRef;
    constructor(streamPartId: StreamPartID, { publisherId, msgChainId }: MessageChainOptions);
    /**
     * Generate the next message MessageID + previous MessageRef for this message chain.
     * Messages with same timestamp get incremented sequence numbers.
     */
    add(timestamp: number): [MessageID, MessageRef | undefined];
}
