/**
 * Derive partitions for StreamMessages.
 */
import { StreamID } from 'streamr-client-protocol';
import { CacheConfig } from '../Config';
import { StreamEndpointsCached } from '../StreamEndpointsCached';
export declare type PartitionKey = string | number | undefined;
export default class StreamPartitioner {
    private streamEndpoints;
    private cacheOptions;
    constructor(streamEndpoints: StreamEndpointsCached, cacheOptions: CacheConfig);
    compute(streamId: StreamID, partitionKey: PartitionKey): Promise<number>;
    clear(): void;
    protected computeStreamPartition: ((_streamId: StreamID, partitionCount: number, partitionKey: PartitionKey) => number) & {
        clear: () => void;
        clearMatching: (matchFn: (key: string) => boolean) => void;
    };
}
