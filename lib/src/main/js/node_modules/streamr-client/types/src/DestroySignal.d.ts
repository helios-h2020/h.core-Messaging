import { Context } from './utils/Context';
import Signal from './utils/Signal';
/**
 * Listen to onDestroy to fire cleanup code on destroy.
 * Careful not to introduce memleaks.
 * Trigger this to destroy the client.
 */
export declare class DestroySignal implements Context {
    onDestroy: {
        (): Promise<undefined>;
        <ReturnType_1>(this: ReturnType_1, cb: () => unknown): ReturnType_1;
    } & import("./utils/Plugin").Methods<Signal<[]>>;
    trigger: () => Promise<void>;
    id: string;
    debug: import("debug").Debugger;
    constructor(context: Context);
    destroy(): Promise<void>;
    assertNotDestroyed(context: Context, msg?: string): void;
    isDestroyed(): boolean;
}
