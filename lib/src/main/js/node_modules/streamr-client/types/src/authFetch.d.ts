/**
 * Wrap fetch with default headers performing authentication if required.
 */
import fetch, { Response } from 'node-fetch';
import { Debugger } from './utils/log';
export declare enum ErrorCode {
    NOT_FOUND = "NOT_FOUND",
    VALIDATION_ERROR = "VALIDATION_ERROR",
    UNKNOWN = "UNKNOWN"
}
export declare const DEFAULT_HEADERS: {
    'Streamr-Client': string;
};
export declare class AuthFetchError extends Error {
    response?: Response;
    body?: any;
    code: ErrorCode;
    errorCode: ErrorCode;
    constructor(message: string, response?: Response, body?: any, errorCode?: ErrorCode);
}
export declare class ValidationError extends AuthFetchError {
    constructor(message: string, response?: Response, body?: any);
}
export declare class NotFoundError extends AuthFetchError {
    constructor(message: string, response?: Response, body?: any);
}
export declare function authRequest<T extends object>(url: string, opts?: any, requireNewToken?: boolean, debug?: Debugger, fetchFn?: typeof fetch): Promise<Response>;
