"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ControlMessage_1 = __importDefault(require("../ControlMessage"));
const PublishStreamConnectionResponse_1 = __importDefault(require("./PublishStreamConnectionResponse"));
const Serializer_1 = require("../../../Serializer");
const StreamID_1 = require("../../../../src/utils/StreamID");
const VERSION = 2;
class PublishStreamConnectionResponseSerializerV2 extends Serializer_1.Serializer {
    toArray(publishStreamConnectionResponse) {
        return [
            VERSION,
            ControlMessage_1.default.TYPES.PublishStreamConnectionResponse,
            publishStreamConnectionResponse.requestId,
            publishStreamConnectionResponse.streamId,
            publishStreamConnectionResponse.streamPartition,
            publishStreamConnectionResponse.senderId,
            publishStreamConnectionResponse.accepted
        ];
    }
    fromArray(arr) {
        const [version, type, // eslint-disable-line @typescript-eslint/no-unused-vars
        requestId, streamId, streamPartition, senderId, accepted] = arr;
        return new PublishStreamConnectionResponse_1.default({
            version,
            requestId,
            streamId: (0, StreamID_1.toStreamID)(streamId),
            streamPartition,
            senderId,
            accepted
        });
    }
}
exports.default = PublishStreamConnectionResponseSerializerV2;
ControlMessage_1.default.registerSerializer(VERSION, ControlMessage_1.default.TYPES.PublishStreamConnectionResponse, new PublishStreamConnectionResponseSerializerV2());
//# sourceMappingURL=PublishStreamConnectionResponseSerializerV2.js.map