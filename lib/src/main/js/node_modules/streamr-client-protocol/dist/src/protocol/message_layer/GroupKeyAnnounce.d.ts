import GroupKeyMessage from './GroupKeyMessage';
import StreamMessage from './StreamMessage';
import EncryptedGroupKey, { EncryptedGroupKeySerialized } from './EncryptedGroupKey';
import { StreamID } from '../../../src/utils/StreamID';
export interface Options {
    streamId: StreamID;
    encryptedGroupKeys: EncryptedGroupKey[];
}
declare type GroupKeyAnnounceSerialized = [string, EncryptedGroupKeySerialized[]];
export default class GroupKeyAnnounce extends GroupKeyMessage {
    encryptedGroupKeys: EncryptedGroupKey[];
    constructor({ streamId, encryptedGroupKeys }: Options);
    toArray(): GroupKeyAnnounceSerialized;
    static fromArray(arr: GroupKeyAnnounceSerialized): GroupKeyAnnounce;
    static is(streamMessage: StreamMessage): streamMessage is StreamMessage<GroupKeyAnnounceSerialized>;
}
export {};
